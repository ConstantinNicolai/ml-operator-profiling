/csghome/kx225/.conda/envs/constabass/lib/python3.9/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(io.BytesIO(b))
done flag already set to true, for rerun reset to false
done flag already set to true, for rerun reset to false
done flag already set to true, for rerun reset to false
done flag already set to true, for rerun reset to false
done flag already set to true, for rerun reset to false
Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False) (32, 3, 32, 32) 5.091704763720524e-05 4.844360605433056 0.0016338515638281718 0.06862827363722684 651885 33.19205959897954 95.14221327108658 1.3044888495375866 631.5932026545455 8.947548432000724 6.143108063538814e-05 2025-01-10_16-13-41 2025-01-10_16-15-09 1.8147966619014332e-07 0.00045531390042368163 2.1073327012139445e-06 50.796568893078344 1.119687114768201 33.617191209981684 111.56384385763491 2.4043336904610815 1250.1543570275512 27.5566195815602
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True) (32, 64, 16, 16) 6.085849519842073e-05 2.5766794797679595 0.002022430757721129 0.02436455297471308 527332 32.0926319899736 42.3388628221426 0.3881517774489972 339.6913858562494 3.2120521123153494 7.617023051891408e-05 2025-01-10_16-15-10 2025-01-10_16-16-36 1.409575652622485e-07 0.0003391411810967782 1.8151159117055336e-07 13.576468221406666 0.08695456131206936 33.47459113897639 40.03190699961751 0.25549958622768326 335.0129298314309 2.1456907549366235
ReLU(inplace=True)
Traceback (most recent call last):
  File "/csghome/kx225/ml-operator-profiling/functional_general_benchmark/general_pipeline_block2_backprop.py", line 260, in <module>
    loss.backward()
  File "/csghome/kx225/.conda/envs/constabass/lib/python3.9/site-packages/torch/_tensor.py", line 521, in backward
    torch.autograd.backward(
  File "/csghome/kx225/.conda/envs/constabass/lib/python3.9/site-packages/torch/autograd/__init__.py", line 289, in backward
    _engine_run_backward(
  File "/csghome/kx225/.conda/envs/constabass/lib/python3.9/site-packages/torch/autograd/graph.py", line 768, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
RuntimeError: element 0 of tensors does not require grad and does not have a grad_fn
